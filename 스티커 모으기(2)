#include <vector>
#include <algorithm>

using namespace std;

int solution(vector<int> sticker) {
    int answer = 0, n = sticker.size();
    vector<int> dp(sticker.size());  
    
    // 맨 처음 스티커 골랐을 경우 마지막 스티커 사용 못 함
    if (sticker.size() == 1) return sticker[0];

    dp[0] = sticker[0];
    dp[1] = dp[0];
    
    for(int i = 2; i < n - 1; i++) {
        dp[i] = max(dp[i - 1], dp[i - 2] + sticker[i]);
    }

    dp[n - 1] = dp[n - 2];
    // 맨 처음 스티커 고르지 않았을 경우 마지막 스티커 사용 가능
    answer = *max_element(dp.begin(), dp.end());

    dp[0] = 0;
    dp[1] = sticker[1];
    
    for(int i = 2; i < n; i++) {
        dp[i] = max(dp[i - 1], dp[i - 2] + sticker[i]);
    }

    answer = max(answer, *max_element(dp.begin(), dp.end()));
    
    return answer;
}
