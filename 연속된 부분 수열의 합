#include <string>
#include <vector>

using namespace std;

vector<int> solution(vector<int> sequence, int k) {
    vector<int> answer;
    int x = 0, y = 0;
    int sum = sequence[0];  // 부분 수열의 합
    int subLen = sequence.size() + 1;  // 부분 수열의 길이
    pair<int, int> result;  // 부분 수열의 시작 인덱스와 마지막 인덱스를 담은 객체
    
    while (x <= y && y < sequence.size()) {
        if (sum < k) sum += sequence[++y];
        else if (sum == k) {
            if (y - x + 1 < subLen) {  // 길이가 더 짧은 수열일 경우
                subLen = y - x + 1;
                result = {x, y};
            } else if (y - x + 1 == subLen) {
                if (x < result.first) {  // 시작 인덱스가 더 작을 경우
                    result = {x, y};
                }
            }
            sum -= sequence[x++];
        } 
        else sum -= sequence[x++];
    }

    return {result.first, result.second};
}
