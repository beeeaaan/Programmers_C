#include <string>
#include <vector>
#include <iostream>
#include <algorithm>
#include <map>

using namespace std;

void convert(string &sheet) {
    map<char, char> m;
    m.insert({'C', 'Q'});
    m.insert({'D', 'R'});
    m.insert({'F', 'S'});
    m.insert({'G', 'T'});
    m.insert({'A', 'U'});
    
    for(int i = 0; i < sheet.length(); i++) {
        if(sheet[i] == '#') { // '#' 있을 경우
            sheet[i - 1] = m[sheet[i - 1]];  // '#' 앞의 문자 변환 
            sheet.erase(sheet.begin() + i);  // '#' 문자 제거
            i--;
        }
    }
    
}

string solution(string m, vector<string> musicinfos) {
    string answer = "(None)";
    int answerplay =- 1;
    
    for(int i = 0; i < musicinfos.size(); i++) {
        string title;
        string sheet;
        int play = 0;
        
        // 처음 "XX:XX,XX:XX" 형식은 고정되어 있으므로 바로 시간 뽑아낼 수 있음    
        play += (musicinfos[i][6] - '0') * 600;
        play += (musicinfos[i][7] - '0') * 60;
        play += (musicinfos[i][9] - '0') * 10;
        play += musicinfos[i][10] - '0';

        play -= (musicinfos[i][0] - '0') * 600;
        play -= (musicinfos[i][1] - '0') * 60;
        play -= (musicinfos[i][3] - '0') * 10;
        play -= musicinfos[i][4] - '0';
        
        for(int j = 12; j < musicinfos[i].size(); j++) {  // 제목, 악보 분리
            if(musicinfos[i][j] == ',') {
                title = musicinfos[i].substr(12, j - 12);
                sheet = musicinfos[i].substr(j + 1);
                break;
            }
        }
        
        // find 함수 사용할 경우 ABC#에서 일치한다고 나오므로 C#들을 다른 문자 하나로 치환하는 과정 필요
        convert(sheet);       
        string radio;
        int idx = 0;  // 재생 시간만큼 라디오에서 재생
        
        for(int j = 0; j < play; j++) {
            radio += sheet[idx++];

            if(idx == sheet.length())
                idx = 0;
        }
        
        convert(m);

        if(radio.find(m) != string::npos) {  // 먼저 입력된 음악부터 정답을 찾으므로 순서 상관 없음
            if(answerplay < play) {  // 현재 결과 재생시간보다 클 경우
                answerplay = play;  // 재생시간 갱신
                answer = title;  // 결과 갱신
            }
        }
        
    }
    
    return answer;
}
