#include <string>
#include <vector>
#include <stack>

using namespace std;

vector<int> solution(vector<int> prices) {
    vector<int> answer(prices.size());
    stack<int> s;
    
    for(int i = 0; i < prices.size() - 1; i++) {  // 마지막 price는 뭘해도 0초이므로 제외
        while(!s.empty() && prices[i] < prices[s.top()]) {  // 하락장일 경우
            answer[s.top()] = i - s.top();  // 기간 : 현재 인덱스 i와 top()의 인덱스 차이
            s.pop();
        }

        s.push(i);  // 인덱스 i : 최고 가격
    }
    
    // 스택에 남은 원소들 처리
    while(!s.empty()) {  // 스택에 남은 것들은 항상 상승만 함
        answer[s.top()] = (prices.size() - 1) - s.top();  // 끝까지 상승기간 구하기 : 맨 끝 위치 - top
        s.pop();
    }
    
    answer[prices.size() - 1] = 0;  // 마지막 price는 항상 0이 나옴

    return answer;
}
