#include <string>
#include <vector>
#include <algorithm>

using namespace std;

// 시간순 정렬
bool compare(vector<string> a, vector<string> b) {
    return a[1] < b[1];
}

vector<string> solution(vector<vector<string>> plans) {
    vector<string> answer;
    vector<pair<string,int>> wait_Tesk;
    sort(plans.begin(), plans.end(), compare);;    
    int time = 0;
    
    // 쉬운 비교 위해 시간을 정수로 변환 (60 * 시간 + 분)
    for(vector<string> v : plans) {
        int new_Time= 60 * stoi(v[1].substr(0, 2)) + stoi(v[1].substr(3, 5));
        
        // 새로 시작해야 하는 과제의 시작시간이 된 경우
        while(time < new_Time ) {
            if(wait_Tesk.size() > 0 ) {
                wait_Tesk.back().second--;
                // 진행중인 과제가 끝난 경우 
                if(wait_Tesk.back().second == 0) {
                    // 다음 과제 (잠시 멈춘 과제) 실행
                    answer.push_back(wait_Tesk.back().first);
                    wait_Tesk.pop_back();
                }
            }
            
            time++;
        }   

        // 진행중인 과제 배열에 정수 형태로 추가
        wait_Tesk.push_back(make_pair(v[0],stoi(v[2])));
    }
    
    while(wait_Tesk.size() > 0) {
        answer.push_back(wait_Tesk.back().first);
        wait_Tesk.pop_back();
    }
    
    return answer;
}
